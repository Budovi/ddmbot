;;;
;;; General settings
;;;
[ddmbot]
; command delimiter symbol
delimiter=!
; initial player state, either 'stopped' or 'djmode'
initial_state=stopped
; skip vote / listener ratio for songs to be skipped
skip_ratio=0.3
; maximum allowed song length [seconds]
song_length_limit=480
; maximum number of allowed playlists per user (high numbers not recommended due to the message length restriction)
playlist_count_limit=20
; maximum number of allowed songs in playlists per user (total count in all playlists)
song_count_limit=1000
; message sent to a user when interacting with the bot for the first time
; you can use python format_map syntax to refer to any config value in the [ddmbot] section
welcome_message=
    **Hello there, I am the Discord Direct Music Bot.** Since this is the first time I see you, here are some tips to get you started.

    My purpose is to allow you to **share, discover, and listen to music** together with your discord fellows. **Make your playlist and join** the DJ queue! I'll make sure to take turns in who's song will be played next.

    **>** All commands must begin with a **`{delimiter}`** and can also be used via private messages.
    **>** To listen to music, either join a voice channel I'm in, or use **`{delimiter}direct`** command to request a link you can use with your favourite music player.
    **>** If you want to play your music, fill up your playlist using **`{delimiter}playlist append <youtube/soundcloud/bandcamp_link>`**. Then **`{delimiter}join`** the DJ queue.

    **There is so much more, it wouldn't fit in this message!** You can queue whole sets or create multiple playlists. Don't hesitate to use **`{delimiter}help`** or ask someone else.

    For even more information, visit DdmBot Wiki at https://github.com/Budovi/ddmbot/wiki. If you find any issues, please report them at https://github.com/Budovi/ddmbot/issues.

;;;
;;; Automatic playlist
;;;
; minimum number of listeners for song to be included
ap_threshold=5
; maximum skip vote / listener ratio for song to be included
ap_skip_ratio=0.3

;;;
;;; Overplay protection
;;;
; time within the song cannot be played again [seconds]
op_interval=3600
; maximum credits song is allowed to have
op_credit_cap=5
; credit increment period [hours]
op_credit_renew=24

;;;
;;; Timeouts
;;;
; direct stream link validity [seconds]
ds_token_timeout=300
; direct listener activity timers [seconds]
ds_notify_time=6600
ds_remove_time=7200
; DJ activity timers [seconds]
dj_notify_time=3000
dj_remove_time=3600

;;;
;;; Advanced
;;;
; database storage sqlite3 file
db_file=db.sqlite
; linux named pipes used to communicate with ffmpeg
int_pipe=/tmp/ddmbot_int
aac_pipe=/tmp/ddmbot_aac
pcm_pipe=/tmp/ddmbot_pcm
; linux named pipe sizes (applies also to the int_pipe in [stream_server]) [bytes]
; 2^20 (1 MiB) by default, see /proc/sys/fs/pipe-max-size for limit (don't run bot as a superuser to overcome this!)
; value will be rounded up to the memory page boundary, see fcntl F_SETPIPE_SZ documentation for details
pcm_pipe_size=1048576
; default volume, valid values are 0-200 [%], applies to the voice channel only
; user setting should be preffered to avoid quality loss, use with caution
default_volume=100
; automatic transition when stream ends from stopped to DJ mode [seconds]
; 0 = disable this feature
stream_end_transition=0

;;;
;;; Discord-related settings
;;;
[discord]
; bot authentication token to login with
token=
; text channel ID that bot interacts with
text_channel=
; text channel ID to log some of the messages
log_channel=
; voice channel ID used to stream the music
voice_channel=
; voice channel ID used to move users to when connecting to direct stream
; specifying this enables seamless stream switch feature, avoiding the need to disconnect before using direct stream
direct_channel=
; role id used to distinguish privileged users
; hint: to get role ID mention it in a chat with a backslash in front, e.g. \@Role
operator_role=

;;;
;;; Embedded direct ICY stream server settings
;;;
[stream_server]
; hostname / IP address that will be in the generated link
hostname=localhost
; IP to bind server to listen on
ip_address=0.0.0.0
; port to use
port=8088
; stream application path
stream_path=/stream.aac
; playlist file path
playlist_path=/ddmbot.m3u
; server name broadcasted with Icy protocol
name=DdmBot stream
; server description broadcasted with Icy protocol
description=Listen to music together using DdmBot
; server genre broadcasted with Icy protocol
genre=
; server url broadcasted with Icy protocol
url=
; aac encoder used by ffmpeg, 'libfdk_aac' by default
; see https://trac.ffmpeg.org/wiki/Encode/AAC for details
aac_encoder=libfdk_aac
; bitrate of resulting aac stream [kbps]
bitrate=128
; granularity of the data sent to the clients [bytes]
; also, Icy metainformation interval
block_size=8000
